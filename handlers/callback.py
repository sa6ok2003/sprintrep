from aiogram import types
from misc import dp, bot
import sqlite3
from aiogram.dispatcher import FSMContext
from .sqlit import update_user
from aiogram.dispatcher.filters.state import State, StatesGroup
import asyncio

photo2 = 'AgACAgIAAxkBAANEYPrbmQqCaTV5U4zezpbFLCRbsKgAAhSzMRso7NlLBXmAjohTHdUBAAMCAANtAAMgBA' #–ü—Ä–æ—à–µ–ª –æ–ø—Ä–æ—Å
photo3 = 'AgACAgIAAxkBAANZYPrmQ1ibsLh3e-TBzbf-s69tPTYAAkq0MRvUvNFL60VHqyrxns0BAAMCAANzAAMgBA' # –ü—Ä–æ–¥–∞–∂–Ω–æ–µ —Ñ–æ—Ç–æ

video1 = 'BAACAgIAAxkBAANFYPrhGR5td7P7pVBs9VIpTbjYJ1sAAtsMAAIo7NlL22beHrkECQggBA' #–≤ —Ä—É–∫–µ –ª–∏—Å—Ç –±—É–º–∞–≥–∏
video2 = 'BAACAgIAAxkBAANPYPrkgGNZBYxyFJK7pc-ABXhu9UMAAvQPAALUvNFLmO-QApQ5_QYgBA' # –ö–æ–Ω–µ—á–Ω–æ–µ –≤–∏–¥–µ–æ


time1 = 75 # –í–∏–¥–µ–æ –¥–ª–∏—Ç—Å—è 80 —Å–µ–∫—É–Ω–¥
time2 = 170 # –í–∏–¥–µ–æ –¥–ª–∏—Ç—Å—è 172 —Å–µ–∫—É–Ω–¥—ã

class regs(StatesGroup):
    names = State()
    fnames = State()
    url_step = State()
    get_kod = State()

@dp.callback_query_handler(text='start_go')
async def start_go1(call: types.callback_query,state: FSMContext):
    markup = types.InlineKeyboardMarkup()

    bat_k = types.InlineKeyboardButton(text='–ö', callback_data='next1')
    bat_a = types.InlineKeyboardButton(text='–ê', callback_data='next1')
    bat_i = types.InlineKeyboardButton(text='–ô', callback_data='next1')
    bat_f = types.InlineKeyboardButton(text='–§', callback_data='next1')

    markup.row(bat_k,bat_a,bat_i,bat_f)
    await bot.send_message(chat_id=call.message.chat.id,text="""<b>1) –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?</b>

–ö) –¥–æ 14

–ê) —Å 14 –¥–æ 17

–ô) —Å 17 –¥–æ 20

–§) —Å 20 –¥–æ 101""",parse_mode='html',reply_markup=markup)


@dp.callback_query_handler(text='next1')
async def start_2(call: types.callback_query,state: FSMContext):
    await bot.delete_message(message_id=call.message.message_id,chat_id=call.message.chat.id)
    markup = types.InlineKeyboardMarkup()

    bat_k = types.InlineKeyboardButton(text='–ö', callback_data='next2')
    bat_a = types.InlineKeyboardButton(text='–ê', callback_data='next2')
    bat_i = types.InlineKeyboardButton(text='–ô', callback_data='next2')
    bat_f = types.InlineKeyboardButton(text='–§', callback_data='next2')

    markup.row(bat_k, bat_a, bat_i, bat_f)
    await bot.send_message(chat_id=call.message.chat.id, text="""<b>2) –° –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã –±—É–¥–µ—à—å?</b>

–ö) –†–æ—Å—Å–∏—è 

–ê) –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω 

–ô) –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω 

–§) –î—Ä—É–≥–∞—è —Å—Ç—Ä–∞–Ω–∞""", parse_mode='html', reply_markup=markup)




@dp.callback_query_handler(text='next2')
async def start_3(call: types.callback_query,state: FSMContext):
    await bot.delete_message(message_id=call.message.message_id, chat_id=call.message.chat.id)
    markup = types.InlineKeyboardMarkup()

    bat_k = types.InlineKeyboardButton(text='–ö', callback_data='next3')
    bat_a = types.InlineKeyboardButton(text='–ê', callback_data='next3')
    bat_i = types.InlineKeyboardButton(text='–ô', callback_data='next3')
    bat_f = types.InlineKeyboardButton(text='–§', callback_data='next3')

    markup.row(bat_k, bat_a, bat_i, bat_f)
    await bot.send_message(chat_id=call.message.chat.id, text="""<b>3) –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –º–æ–∂–µ—à—å —É–¥–µ–ª—è—Ç—å —Ä–∞–±–æ—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ?</b>

–ö) 1 - 2 —á–∞—Å–∞ 

–ê) 2 - 4 —á–∞—Å–∞ 

–ô) 4 - 6 —á–∞—Å–æ–≤ 

–§) 6 - 8 —á–∞—Å–æ–≤""", parse_mode='html', reply_markup=markup)


@dp.callback_query_handler(text='next3')
async def start_3(call: types.callback_query,state: FSMContext):
    await bot.delete_message(message_id=call.message.message_id, chat_id=call.message.chat.id)
    markup = types.InlineKeyboardMarkup()

    bat_k = types.InlineKeyboardButton(text='–ö', callback_data='next4')
    bat_a = types.InlineKeyboardButton(text='–ê', callback_data='next4')
    bat_i = types.InlineKeyboardButton(text='–ô', callback_data='next4')
    bat_f = types.InlineKeyboardButton(text='–§', callback_data='next4')

    markup.row(bat_k, bat_a, bat_i, bat_f)
    await bot.send_message(chat_id=call.message.chat.id, text="""<b>4) –°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å –≤ –º–µ—Å—è—Ü, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç?</b>

–ö) –¥–æ 100$

–ê) –æ—Ç 100$ –¥–æ 500$

–ô) –æ—Ç 500$ –¥–æ 1000$

–§) –æ—Ç 1000$ –¥–æ üçã""", parse_mode='html', reply_markup=markup)


@dp.callback_query_handler(text='next4')
async def start_3(call: types.callback_query,state: FSMContext):
    await bot.delete_message(message_id=call.message.message_id, chat_id=call.message.chat.id)
    markup = types.InlineKeyboardMarkup()

    bat_k = types.InlineKeyboardButton(text='–ö', callback_data='next5')
    bat_a = types.InlineKeyboardButton(text='–ê', callback_data='next5')
    bat_i = types.InlineKeyboardButton(text='–ô', callback_data='next5')
    bat_f = types.InlineKeyboardButton(text='–§', callback_data='next5')

    markup.row(bat_k, bat_a, bat_i, bat_f)
    await bot.send_message(chat_id=call.message.chat.id, text="""<b>5) –ó–Ω–∞–µ—à—å –ª–∏ —á—Ç–æ —Ç–∞–∫–æ–µ ¬´–ê—Ä–±–∏—Ç—Ä–∞–∂ —Ç—Ä–∞—Ñ–∏–∫–∞¬ª?</b>

–ö) –Ω–µ—Ç

–ê) –¥–∞

–ô) –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ 

–§) —è –º–∞—Å—Ç–µ—Ä –ê—Ä–±–∏—Ç—Ä–∞–∂–∞""", parse_mode='html', reply_markup=markup)


@dp.callback_query_handler(text='next5')
async def start_3(call: types.callback_query,state: FSMContext):
    await bot.delete_message(message_id=call.message.message_id, chat_id=call.message.chat.id)
    markup = types.InlineKeyboardMarkup()

    bat_k = types.InlineKeyboardButton(text='–ö', callback_data='next6')
    bat_a = types.InlineKeyboardButton(text='–ê', callback_data='next6')
    bat_i = types.InlineKeyboardButton(text='–ô', callback_data='next6')
    bat_f = types.InlineKeyboardButton(text='–§', callback_data='next6')

    markup.row(bat_k, bat_a, bat_i, bat_f)
    await bot.send_message(chat_id=call.message.chat.id, text="""<b>6) –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª?</b>

–ö) –Ω–µ—Ç

–ê) –¥–∞

–ô) –≥–¥–µ-—Ç–æ –ø—ã–ª–∏—Ç—å—Å—è 

–§) —è –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é —Ç–≥""", parse_mode='html', reply_markup=markup)


@dp.callback_query_handler(text='next6')
async def start_3(call: types.callback_query,state: FSMContext):
    await bot.delete_message(message_id=call.message.message_id, chat_id=call.message.chat.id)
    markup = types.InlineKeyboardMarkup()

    bat_k = types.InlineKeyboardButton(text='–ö', callback_data='next7')
    bat_a = types.InlineKeyboardButton(text='–ê', callback_data='next7')
    bat_i = types.InlineKeyboardButton(text='–ô', callback_data='next7')
    bat_f = types.InlineKeyboardButton(text='–§', callback_data='next7')

    markup.row(bat_k, bat_a, bat_i, bat_f)
    await bot.send_message(chat_id=call.message.chat.id, text="""<b>7) –°–∫–æ–ª—å–∫–æ —Ä–æ–ª–∏–∫–æ–≤ —Å–Ω–∏–º–∞–µ—à—å –≤ —Ç–∏–∫ —Ç–æ–∫?</b>

–ö) –º–Ω–æ–≥–æ

–ê) –Ω–µ —Å–Ω–∏–º–∞—é

–ô) –±—ã–≤–∞–µ—Ç –∏–Ω–æ–≥–¥–∞

–§) —è —Ç–∏–∫ —Ç–æ–∫–µ—Ä""", parse_mode='html', reply_markup=markup)

@dp.callback_query_handler(text='next7')
async def start_3(call: types.callback_query,state: FSMContext):
    await bot.delete_message(message_id=call.message.message_id, chat_id=call.message.chat.id)
    markup = types.InlineKeyboardMarkup()

    bat_k = types.InlineKeyboardButton(text='–ö', callback_data='next8')
    bat_a = types.InlineKeyboardButton(text='–ê', callback_data='next8')
    bat_i = types.InlineKeyboardButton(text='–ô', callback_data='next8')
    bat_f = types.InlineKeyboardButton(text='–§', callback_data='next8')

    markup.row(bat_k, bat_a, bat_i, bat_f)
    await bot.send_message(chat_id=call.message.chat.id, text="""<b>8) –ï—Å—Ç—å –ª–∏ –æ–ø—ã—Ç –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–µ?</b>

–ö) –Ω–µ—Ç

–ê) –Ω–µ–º–Ω–æ–≥–æ

–ô) –¥–∞ –µ—Å—Ç—å

–§) —è —ç–∫—Å–ø–µ—Ä—Ç""", parse_mode='html', reply_markup=markup)


@dp.callback_query_handler(text='next8')
async def start_3(call: types.callback_query,state: FSMContext):
    await bot.delete_message(message_id=call.message.message_id, chat_id=call.message.chat.id)
    markup = types.InlineKeyboardMarkup()

    bat_k = types.InlineKeyboardButton(text='–ö', callback_data='step1')
    bat_a = types.InlineKeyboardButton(text='–ê', callback_data='step2')
    bat_i = types.InlineKeyboardButton(text='–ô', callback_data='step2')
    bat_f = types.InlineKeyboardButton(text='–§', callback_data='step2')

    markup.row(bat_k, bat_a, bat_i, bat_f)
    await bot.send_message(chat_id=call.message.chat.id, text="""<b>9) –ë—ã–ª(–∞) –Ω–∞ –Ω–∞—à–µ–º –ö–≤–µ—Å—Ç–µ –ø–æ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–æ–º—É —Å—Ç–∞—Ä—Ç—É?</b>

–ö) –¥–∞

–ê) –Ω–µ—Ç

–ô) —á—Ç–æ-—Ç–æ —Å–ª—ã—à–∞–ª(–∞) —Ç—ã –¥–µ–ª–∞–ª 

–§) –Ω–µ —É—Å–ø–µ–ª(–∞) –ø–æ–ø–∞—Å—Ç—å""", parse_mode='html', reply_markup=markup)


# –ß–µ–ª–æ–≤–µ–∫ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç
@dp.callback_query_handler(text='step1')
async def step1_k(call: types.callback_query,state: FSMContext):
    await bot.delete_message(message_id=call.message.message_id, chat_id=call.message.chat.id)

    markup = types.InlineKeyboardMarkup()
    bat = types.InlineKeyboardButton(text='–ü–æ–¥–∞—Ä–æ–∫', callback_data='get_priz')
    markup.add(bat)

    await bot.send_message(chat_id=call.message.chat.id,text="""–°–æ—Ä—Ä–∏(( –Ω–æ —Ç–µ—Å—Ç –ø–æ–∫–∞–∑–∞–ª, —á—Ç–æ –Ω–∞—à –∫–æ—Ä–æ—Ç–∫–∏–π –∑–∞–ø—É—Å–∫ —Å–ø—Ä–∏–Ω—Ç–∞, —Ç–µ–±–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, –Ω–æ —Å–∫–æ—Ä–æ –º—ã –∑–∞–ø—É—Å—Ç–∏–º —Å–ø—Ä–∏–Ω—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ, –∂–¥–∏ –∞–Ω–æ–Ω—Å—ã –≤ —Å—Ç–æ—Ä–∏—Å ü§ó

–ê –ø–æ–∫–∞ —á—Ç–æ —É –º–µ–Ω—è –¥–ª—è —Ç–µ–±—è –Ω–µ–±–æ–ª—å—à–æ–π –ø–æ–¥–∞—Ä–æ–∫ üéÅ""",reply_markup=markup)


@dp.callback_query_handler(text='get_priz')
async def get_priz(call: types.callback_query,state: FSMContext):
    await bot.send_message(call.message.chat.id,text="""https://telegra.ph/Arbitrazh-trafika-dlya-novichkov-pribyl-ot-50000-v-mesyac--podbor-topovyh-offerov--bez-vlozhenij-v-trafik-07-04""")


# –ß–µ–ª–æ–≤–µ–∫ –ø–æ–¥—Ö–æ–¥–∏—Ç
@dp.callback_query_handler(text='step2')
async def step2_k(call: types.callback_query,state: FSMContext):
    markup = types.InlineKeyboardMarkup()
    bat = types.InlineKeyboardButton(text='–Ø —Ç—É—Ç üëã', callback_data='step3')
    markup.add(bat)
    await bot.send_photo(chat_id=call.message.chat.id,photo=photo2,caption="""–ö—Ä–∞—Å–∞–≤–∞ üí™

–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω ‚úÖ

–õ–∞–Ω) –ø–æ–≥–Ω–∞–ª –¥–∞–ª—å—à–µ —Ç–µ–±–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å, —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–Ω–æ–ø–∫—É –∂–∞–º–∫–Ω–∏ üòÖ""",reply_markup=markup)



@dp.callback_query_handler(text='step3')
async def step3(call: types.callback_query,state: FSMContext):
    markup = types.InlineKeyboardMarkup()
    bat = types.InlineKeyboardButton(text='–î–∞–ª–µ–µ', callback_data='time')
    markup.add(bat)

    v = await bot.send_video(chat_id=call.message.chat.id,video=video1,reply_markup=markup)

    await asyncio.sleep(time1)

    markup2 = types.InlineKeyboardMarkup()
    bat2 = types.InlineKeyboardButton(text='–î–∞–ª–µ–µ', callback_data='step4')
    markup2.add(bat2)

    await bot.edit_message_reply_markup(chat_id=v.chat.id,message_id=v.message_id,reply_markup=markup2)


@dp.callback_query_handler(text='time')
async def time(call: types.callback_query,state: FSMContext):
    await bot.send_message(chat_id=call.message.chat.id,text='–ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å üòÄ\n'
                                                             '–°–Ω–∞—á–∞–ª–∞ –¥–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ')

@dp.callback_query_handler(text='step4')
async def step4(call: types.callback_query,state: FSMContext):
    markup = types.InlineKeyboardMarkup()
    bat = types.InlineKeyboardButton(text='–î–∞–ª–µ–µ', callback_data='time')
    markup.add(bat)

    v = await bot.send_video(chat_id=call.message.chat.id, video=video2, reply_markup=markup)

    await asyncio.sleep(time2)

    markup2 = types.InlineKeyboardMarkup()
    bat2 = types.InlineKeyboardButton(text='–î–∞–ª–µ–µ', callback_data='step5')
    markup2.add(bat2)

    await bot.edit_message_reply_markup(chat_id=v.chat.id, message_id=v.message_id, reply_markup=markup2)


@dp.callback_query_handler(text='step5')
async def step5(call: types.callback_query,state: FSMContext):
    await bot.send_photo(chat_id=call.message.chat.id, caption="""
    –ö—Å—Ç–∞—Ç–∏ –≤—Å–µ –Ω–∞—à–∏ —É—á–µ–Ω–∏–∫–∏)  –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ –≤ —Å–ø—Ä–∏–Ω—Ç 5$ –∏ —Å–¥–µ–ª–∞–ª–∏ –•100 üí™ –∂–∏—Ä–Ω–∞—è –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å.

–ö–∞–∫ –ø–æ–ø–∞—Å—Ç—å –≤ —Å–ø—Ä–∏–Ω—Ç?

–¢–∞–∫ –∫–∞–∫ —ç—Ç–æ –ø—Ä–µ–¥ –∑–∞–ø—É—Å–∫ —Å–ø—Ä–∏–Ω—Ç–∞, —Å–¥–µ–ª–∞—é –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π —Å–º–æ–≥ –≤–∫—É—Å–∏—Ç—å, —ç—Ç–æ—Ç –∫–∞–π—Ñ üòá

–°—Ç–æ–∏–º–æ—Å—Ç—å - 4$ 

–î–ª—è –†—Ñ - 294‚ÇΩ
–î–ª—è –ö—Ä - 337 —Å–æ–º
–î–ª—è –£–∑–± - 42.400 —Å—É–º 
–î–ª—è –ö–∑ - 1700 —Ç–µ–Ω–≥–µ 
–î–ª—è –£–∫ - 108 –≥—Ä–∏–≤–Ω–∞ 
–î–ª—è –ë–µ–ª–æ—Ä—É—Å—Å–∏–∏ - 10

–ï—Å–ª–∏ –∫—É—Ä—Å –ø–æ–º–µ–Ω—è–ª—Å—è, –Ω–µ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–º–µ–Ω—è–µ–º üëå 

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–∫—É @nikolanext

–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã, –¥–æ–±–∞–≤–ª—é –≤ —á–∞—Ç –æ–∂–∏–¥–∞–Ω–∏—è)

–ú–µ—Å—Ç –æ—Å—Ç–∞–ª–æ—Å—å (45)""",photo=photo3)
    update_user(call.message.chat.id)

